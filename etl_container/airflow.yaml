---
version: '3.7'

x-common:
  &common
  build: .
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./data:/opt/airflow/data
    - ./functions:/opt/airflow/functions
    - ./stopword_list.joblib:/opt/airflow/stopword_list.joblib
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services: 
  postgres:
    image: postgres:13
    container_name: postgres-project
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env

  scheduler:
    <<: [*common, *depends-on]
    # <<: *depends-on
    container_name: airflow-scheduler-project
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: [*common, *depends-on]
    # <<: *common
    # <<: *depends-on
    container_name: airflow-webserver-project
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
  
  airflow-init:
    <<: *common
    container_name: airflow-init-project
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/data
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,data}
        exec /entrypoint airflow version

